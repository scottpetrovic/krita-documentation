# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018
# This file is distributed under the same license as the Krita Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-18 16:21+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../general_concepts/colors.rst:16
msgid "Colors"
msgstr ""

#: ../../general_concepts/colors.rst:18
msgid "Okay, so... Let's talk **colors**!"
msgstr ""

#: ../../general_concepts/colors.rst:20
msgid ""
"Colors are pretty, and they're also *pretty* fundamental to painting. "
"When painting, we want to be able to access and manipulate colors easily "
"to do fun stuff like :ref:mixing`mixing_colors` them together or matching"
" them to create visual **harmony** or **contrast**. We also want to be "
"able to quickly find our favorite shades of red or favorite tints of blue"
" without thinking or working too hard. All of this becomes even more "
"important the more colors we have access to!"
msgstr ""

#: ../../general_concepts/colors.rst:22
msgid ""
"Naturally, the first thing we do is organize the colors, usually based on"
" what we see in nature. For example, we tend to order hues in the order "
"that they appear in a rainbow, and we think about brightness of values as"
" a tonal range from white to black. Of course, nature itself is tied to "
"physics, and the order of hues and the concept of brightness has "
"everything to do with the wavelength and energy or light as it bounces "
"around and eventually enters our eyes."
msgstr ""

msgid ".. image:: images/en/color_category/Krita_color_mixing_natural_order.png"
msgstr ""

#: ../../general_concepts/colors.rst:28
msgid ""
"In the case of *traditional media*, we order the colors (**hues**) by how"
" they result from mixes of other colors, starting with the *subtractive* "
"**primary colors**: cyan, magenta, yellow. Mixing each primary color with"
" each other reveals three secondary colors: violet, orange, and green. "
"Mixing between those colors creates tertiary colors, and so on - the "
"variations of hues between each named color are practically limitless! "
"Thinking of colors in this way creates a circle of hues that artists call"
" *\"the color wheel\"*! Each one of these hues can be made **lighter "
"(tint)** or **darker (shade)** by mixing with white or black, "
"respectively, and any color can be made **less saturated** (more gray or "
"muted) by mixing with another color on the opposite side of the color "
"wheel."
msgstr ""

msgid ""
".. image:: "
"images/en/color_category/Krita_color_mixing_traditional_order.png"
msgstr ""

#: ../../general_concepts/colors.rst:34
msgid ""
"In the digital world of computers color is treated similarly, and we "
"order colors by the *way the screen generates them*; each **pixel** of "
"color on our screen is produced by combining *super tiny* red, green, and"
" blue lights of varying intensities. Unlike mixing paint, where light "
"intensity is subtracted by pigment and mixing all the colors together "
"produces a muddy brown or gray, *mixing lights is additive* - no light at"
" all is obviously black, and mixing all of the colored lights produces "
"white. As such, we can make a list of possible primary color "
"**intensities**:"
msgstr ""

#: ../../general_concepts/colors.rst:37
msgid ".. image:: images/en/color_category/percentages_red.svg"
msgstr ""

#: ../../general_concepts/colors.rst:38
msgid ""
"Shown above is a table of different intensities of red light. Our screens"
" can certainly create a lot of shades of red, but we only start to see "
"*the power of pixels* when we add in the other primary colors, green and "
"blue, and show the colors of light that are produced when they are added "
"together! For example, here's a table showing various mixes of red and "
"green:"
msgstr ""

#: ../../general_concepts/colors.rst:41
msgid ".. image:: images/en/color_category/percentages_red_green.svg"
msgstr ""

#: ../../general_concepts/colors.rst:42
msgid ""
"But that's just red and green, what about blue? I guess we can make *even"
" more tables* to show what happens when different amounts of blue are "
"added into the mix:"
msgstr ""

#: ../../general_concepts/colors.rst:45
msgid ".. image:: images/en/color_category/percentages_red_green_blue.svg"
msgstr ""

#: ../../general_concepts/colors.rst:46
msgid ""
"This way of ordering colors is probably familiar to you if you have used "
"some programs for making internet applications, like Flash. In fact, if "
"we had made 6 samples instead of 5 per \"channel\" (that is, per each "
"primary color), we'd have gotten the `216 websafe colors "
"<https://websafecolors.info/color-chart>`_!"
msgstr ""

#: ../../general_concepts/colors.rst:48
msgid ""
"Showing the colors in a bunch of tables just *feels wrong*, though, "
"doesn't it? That's because, while our tables are *2D*, as we are mixing "
"*three* primary colors, color can be thought of as *3D*! It’s a bit odd "
"the first time you think about it this way, but you can actually stack "
"these tables based on the amount of blue and they become a **cube**!"
msgstr ""

msgid ".. image:: images/en/color_category/Rgbcolorcube_2.png"
msgstr ""

#: ../../general_concepts/colors.rst:54
msgid ""
"This cube is not filled with water, or sand, or even *concrete*, but "
"colors! Colors are pretty *abstract*, and we typically talk about cubes "
"and other 3D objects that represent abstract ideas as **spaces**, hence "
"we call this cube a **color space**. Because this particular cube uses "
"red, green, and blue as it’s axes, we say that our cube is in the RGB "
":ref:`RGB color model <model_rgb>`."
msgstr ""

#: ../../general_concepts/colors.rst:56
msgid ""
"There are many more color models. For example, if we were to balance our "
"cube on the black corner, the white corner would be right under our "
"finger at the very top of the cube. And as geometry and maths would have "
"it, if we were to cut the cube in half as we balanced it, the line from "
"the white point at the top to the black point at the bottom would be the "
"**grayscale**."
msgstr ""

msgid ".. image:: images/en/color_category/Rgbcolorcube_HSI.png"
msgstr ""

#: ../../general_concepts/colors.rst:62
msgid ""
"When you think about a strip of grays running through the middle of the "
"cube, as we move farther away from that grayscale towards the *outer "
"edges* of the cube the colors would begin to become more saturated "
"(colorful and vivid). The circle of colors around that middle axis of "
"gray would then define the hue, with a different color in each direction."
msgstr ""

#: ../../general_concepts/colors.rst:64
msgid ""
"This is the basic idea of the :ref:`HSV, HSL, HSI, and HSY color models "
"<model_rgb>`. This particular model is called **HSI** (hue, saturation, "
"and intensity), because it maps each unique color to the intensity of the"
" primary colored lights that mix to create them."
msgstr ""

#: ../../general_concepts/colors.rst:66
msgid ""
"There are other color models, like :ref:`model_lab`, where we look at the"
" corresponding gray value of a color first, and then try to describe it, "
"not it terms of hue and saturation, but by how red, green, blue, and "
"yellow it is. Because our brains cannot really comprehend a color that is"
" both green and red, or yellow and blue, this makes them good *polar "
"opposites* in a sliding scale. We call this a **perceptual model**, as it"
" is based on how *we see color instead of how the color is generated*."
msgstr ""

#: ../../general_concepts/colors.rst:68
msgid ""
"Color models describe color spaces, which, in turn, are all sorts of "
"sizes and shapes as well. Krita allows you to do operations in different "
"models and spaces, and we call this functionality **\"Color "
"Management\"**."
msgstr ""

#: ../../general_concepts/colors.rst:70
msgid ""
"Color Management is necessary for :ref:`**CMYK** (subtractive) "
"<model_cmyk>` support, but outside of that, not many drawing or painting "
"programs offer the feature, as *some* developers believe that artists "
"have no need for such functionality. *What a pity!* Especially because "
"Color Management allows for far more *cool tricks* than just basic CMYK "
"support, and the ability to *manipulate colors like a computer can* is "
"perhaps digital painting’s most unique quality!"
msgstr ""

#: ../../general_concepts/colors.rst:72
msgid ""
"As Krita is giving almost *unprecedented control of color*, this "
"unfortunately means that there are little to no articles out there on how"
" to use color management for artists or painters. And so, we made this "
"category and hope to fill it up with relatively short articles explaining"
" color-related concepts in a light-hearted and visual manner."
msgstr ""

#: ../../general_concepts/colors.rst:74
msgid ""
"We recommend going over the :ref:`color managed workflow page "
"<color_managed_workflow>` next - even if you don't plan on using it, it "
"will help make sense out of the many features related to colors and Color"
" Management. Other than that, each article should stand on its own and "
"can be taken in at your own direction and pace!"
msgstr ""

#: ../../general_concepts/colors.rst:84
msgid ""
".. image:: images/icons/Krita_mouse_left.png\n"
"   :alt: mouseleft"
msgstr ""

#: ../../general_concepts/colors.rst:86
msgid ""
".. image:: images/icons/Krita_mouse_right.png\n"
"   :alt: mouseright"
msgstr ""

#: ../../general_concepts/colors.rst:88
msgid ""
".. image:: images/icons/Krita_mouse_middle.png\n"
"   :alt: mousemiddle"
msgstr ""

#: ../../general_concepts/colors.rst:90
msgid ""
".. image:: images/icons/Krita_mouse_scroll.png\n"
"   :alt: mousescroll"
msgstr ""

#: ../../general_concepts/colors.rst:92
msgid ""
".. image:: images/icons/shape_select_tool.svg\n"
"   :alt: toolshapeselection"
msgstr ""

#: ../../general_concepts/colors.rst:94
msgid ""
".. image:: images/icons/shape_edit_tool.svg\n"
"   :alt: toolshapeedit"
msgstr ""

#: ../../general_concepts/colors.rst:96
msgid ""
".. image:: images/icons/text-tool.svg\n"
"   :alt: tooltext"
msgstr ""

#: ../../general_concepts/colors.rst:98
msgid ""
".. image:: images/icons/calligraphy_tool.svg\n"
"   :alt: toolcalligraphy"
msgstr ""

#: ../../general_concepts/colors.rst:100
msgid ""
".. image:: images/icons/gradient_edit_tool.svg\n"
"   :alt: toolgradientedit"
msgstr ""

#: ../../general_concepts/colors.rst:102
msgid ""
".. image:: images/icons/pattern_tool.svg\n"
"   :alt: toolpatternedit"
msgstr ""

#: ../../general_concepts/colors.rst:104
msgid ""
".. image:: images/icons/freehand_brush_tool.svg\n"
"   :alt: toolfreehandbrush"
msgstr ""

#: ../../general_concepts/colors.rst:106
msgid ""
".. image:: images/icons/line_tool.svg\n"
"   :alt: toolline"
msgstr ""

#: ../../general_concepts/colors.rst:108
msgid ""
".. image:: images/icons/rectangle_tool.svg\n"
"   :alt: toolrectangle"
msgstr ""

#: ../../general_concepts/colors.rst:110
msgid ""
".. image:: images/icons/ellipse_tool.svg\n"
"   :alt: toolellipse"
msgstr ""

#: ../../general_concepts/colors.rst:112
msgid ""
".. image:: images/icons/polygon_tool.svg\n"
"   :alt: toolpolygon"
msgstr ""

#: ../../general_concepts/colors.rst:114
msgid ""
".. image:: images/icons/polyline_tool.svg\n"
"   :alt: toolpolyline"
msgstr ""

#: ../../general_concepts/colors.rst:116
msgid ""
".. image:: images/icons/bezier_curve.svg\n"
"   :alt: toolbeziercurve"
msgstr ""

#: ../../general_concepts/colors.rst:118
msgid ""
".. image:: images/icons/freehand_path_tool.svg\n"
"   :alt: toolfreehandpath"
msgstr ""

#: ../../general_concepts/colors.rst:120
msgid ""
".. image:: images/icons/dyna_tool.svg\n"
"   :alt: tooldyna"
msgstr ""

#: ../../general_concepts/colors.rst:122
msgid ""
".. image:: images/icons/multibrush_tool.svg\n"
"   :alt: toolmultibrush"
msgstr ""

#: ../../general_concepts/colors.rst:124
msgid ""
".. image:: images/icons/assistant_tool.svg\n"
"   :alt: toolassistant"
msgstr ""

#: ../../general_concepts/colors.rst:126
msgid ""
".. image:: images/icons/move_tool.svg\n"
"   :alt: toolmove"
msgstr ""

#: ../../general_concepts/colors.rst:128
msgid ""
".. image:: images/icons/transform_tool.svg\n"
"   :alt: tooltransform"
msgstr ""

#: ../../general_concepts/colors.rst:130
msgid ""
".. image:: images/icons/grid_tool.svg\n"
"   :alt: toolgrid"
msgstr ""

#: ../../general_concepts/colors.rst:132
msgid ""
".. image:: images/icons/perspectivegrid_tool.svg\n"
"   :alt: toolperspectivegrid"
msgstr ""

#: ../../general_concepts/colors.rst:134
msgid ""
".. image:: images/icons/measure_tool.svg\n"
"   :alt: toolmeasure"
msgstr ""

#: ../../general_concepts/colors.rst:136
msgid ""
".. image:: images/icons/color_picker_tool.svg\n"
"   :alt: toolcolorpicker"
msgstr ""

#: ../../general_concepts/colors.rst:138
msgid ""
".. image:: images/icons/fill_tool.svg\n"
"   :alt: toolfill"
msgstr ""

#: ../../general_concepts/colors.rst:140
msgid ""
".. image:: images/icons/gradient_drawing_tool.svg\n"
"   :alt: toolgradient"
msgstr ""

#: ../../general_concepts/colors.rst:142
msgid ""
".. image:: images/icons/colorizemask_tool.svg\n"
"   :alt: toolcolorizemask"
msgstr ""

#: ../../general_concepts/colors.rst:144
msgid ""
".. image:: images/icons/smart_patch_tool.svg\n"
"   :alt: toolsmartpatch"
msgstr ""

#: ../../general_concepts/colors.rst:146
msgid ""
".. image:: images/icons/crop_tool.svg\n"
"   :alt: toolcrop"
msgstr ""

#: ../../general_concepts/colors.rst:148
msgid ""
".. image:: images/icons/rectangular_select_tool.svg\n"
"   :alt: toolselectrect"
msgstr ""

#: ../../general_concepts/colors.rst:150
msgid ""
".. image:: images/icons/elliptical_select_tool.svg\n"
"   :alt: toolselectellipse"
msgstr ""

#: ../../general_concepts/colors.rst:152
msgid ""
".. image:: images/icons/polygonal_select_tool.svg\n"
"   :alt: toolselectpolygon"
msgstr ""

#: ../../general_concepts/colors.rst:154
msgid ""
".. image:: images/icons/path_select_tool.svg\n"
"   :alt: toolselectpath"
msgstr ""

#: ../../general_concepts/colors.rst:156
msgid ""
".. image:: images/icons/outline_select_tool.svg\n"
"   :alt: toolselectoutline"
msgstr ""

#: ../../general_concepts/colors.rst:158
msgid ""
".. image:: images/icons/contiguous_select_tool.svg\n"
"   :alt: toolselectcontiguous"
msgstr ""

#: ../../general_concepts/colors.rst:160
msgid ""
".. image:: images/icons/similar_select_tool.svg\n"
"   :alt: toolselectsimilar"
msgstr ""

#: ../../general_concepts/colors.rst:162
msgid ""
".. image:: images/icons/pan_tool.svg\n"
"   :alt: toolpan"
msgstr ""

#: ../../general_concepts/colors.rst:164
msgid ""
".. image:: images/icons/zoom_tool.svg\n"
"   :alt: toolzoom"
msgstr ""

